@startuml
'https://plantuml.com/sequence-diagram

skinparam backgroundColor #EEEBDC
skinparam sequence {
ParticipantBorderColor DodgerBlue
ParticipantBackgroundColor DeepSkyBlue
ActorBorderColor DarkGreen
ActorBackgroundColor Green
BoxBorderColor LightBlue
BoxBackgroundColor #F0FFFF
}

title MCS Correlation Configure Scan Band 1/2 - VCC Detail\n

box "MCS"
participant "Mid.CBF\nSubarray" as subarray
participant "VCC\n" as vcc
end box

box "HPS"
participant "HPS VCC\nController" as hpsvcc
participant "HPS VCC\nBand1&2" as vccband1
participant "Circuit\nSwitch" as cs
participant "HPS\nVCC" as vccdevice
participant "Wide Band\nInput Buffer" as wb
end box

group #LightCyan For each assigned receptor:
    subarray    -> subarray     : Calculate\ndish_sample_rate
    note right                  : dish_sample_rate (Band 1/2) = 3960 MHz + (1 * K * <U+0394>F)
    subarray    -> vcc          : ConfigureBand(json_str)
    vcc         -> vcc          : load band\nconfiguration
    vcc         -> hpsvcc       : ConfigureBand(int)
    group #SeaShell If FrequencyBand == [1,2]:
        hpsvcc  -> vccband1     : On
    else 
        hpsvcc  -> vccband1     : Disable
    end group
    vcc         -> vccband1     : SetInternalParameters(json_str)
    vccband1    -> vccband1     : set VCC gains,\nset sample rate

    subarray    -> vcc          : ConfigureScan(json_str)
    vcc         -> vccband1     : ConfigureScan(json_str)
    vccband1    -> cs           : write_attribute(cs_input_select)
    vccband1    -> vccdevice    : write_attribute(frame_count)
    vccband1    -> wb           : write_attributes(stream_rate, packet_rate, etc)
    note over wb                : RecieveEnable == True
    vccband1    -> vccband1     : verify_configuration()
    note over vcc               : ObsState == READY
end group


@enduml